<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
        <!-- 1.扫描注解 -->
        <!-- 扫描的是非控制器的注解 -->
       <!--  <context:component-scan base-package="com.qfedu.service.impl"></context:component-scan> -->
        
        <context:component-scan base-package="com.qfedu" >
        	<!-- 排除不需要扫描的注解 -->
        	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>


        
        <!-- 2. 配置数据库连接池的连接对象 -->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url" value="jdbc:mysql://localhost:3306/zz1901" />
			<property name="username" value="root" />
			<property name="password" value="1234" />
			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="1" />
			<property name="minIdle" value="1" />
			<property name="maxActive" value="10" />
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="10000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="testWhileIdle" value="true" />
			<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
			<property name="testOnBorrow" value="true" />
			<property name="testOnReturn" value="false" />
		
		</bean>
		
	<!-- 	  JdbcTemplate工具类实例 
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource" ref="dataSource"></property>
		</bean> -->
		
        <!-- 3创建sqlSessionFactory对象，设置mybatis主配置和映射配置 -->
        <bean id="sqlSessionFactory"
			class="org.mybatis.spring.SqlSessionFactoryBean">
			<!--设置数据库连接池 -->
			<property name="dataSource" ref="dataSource"></property>
			<!-- 加载mybatis主配置文件  classpath:编译后文件所在路径-->
			<property name="configLocation" value="classpath:mybatis.xml"/>
			<!-- 加载映射文件  指定路径下所有已 xml结尾的文件-->
			<property name="mapperLocations" value="classpath:com/qfedu/mapping/*.xml"/>
			<property name="typeAliasesPackage" value="com.qfedu.entity"/>
		</bean>

		<!--分页引入的mybatis插入 如果 不在mybatis.xml里配置 ，就在spring配置的sqlSessionFactory工厂里写入
		 	   注意其他配置
				<property name="plugins">
					<array>
						<bean class="com.github.pagehelper.PageInterceptor">
							<property name="properties">
								&lt;!&ndash;使用下面的方式配置参数，一行配置一个 &ndash;&gt;
								<value>
									params=value1
								</value>
							</property>
						</bean>
					</array>
				</property>-->



		<!--  4扫描相关的dao接口 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
			<!-- 设置Dao接口所在包 -->
			<property name="basePackage" value="com.qfedu.dao"></property>
		</bean>
		
		<!-- 5事务管理对象 -->
		<bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   			<property name="dataSource" ref="dataSource"></property>
   		</bean>
   		
   		<!-- 6设置事务增强 -->
		<tx:advice id="txAdvice" transaction-manager="txManage">
	   		<tx:attributes>
	   			<!-- 针对使用事务的add开头的方法 
	   			read-only 是否只读，true 是，false 可读可写
	   			如果有插入等操作，设为为true，运行程序会报异常-->
	   			<tx:method name="add*" read-only="false" propagation="REQUIRED"/>
	   			<tx:method name="delete*" read-only="false"  propagation="REQUIRED"/>
	   			<tx:method name="update*" read-only="false"  propagation="REQUIRED"/>
	   			<tx:method name="find*" read-only="true"  propagation="REQUIRED"/>
	   			<!-- 针对其余的方法 -->
	   			<tx:method name="*" propagation="NOT_SUPPORTED"/>
	   			
	   		</tx:attributes>
  	 	</tx:advice>
  	 	
  	 	<!--7 aop配置 -->

</beans>
        
        
